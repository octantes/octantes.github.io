# .github/workflows/build-md.yml
name: build-md

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: restore build cache (best-effort)
        uses: actions/download-artifact@v4
        with:
          name: build-cache
          path: .
        continue-on-error: true

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install deps
        run: npm ci

      - name: 1. copy build cache into temporal fs
        run: |
          if [ -f ./.build-cache.json ]; then
            mkdir -p $(dirname ./.build-cache.json)
            cp ./.build-cache.json ./.build-cache.json
          fi

      - name: 2. build spa using vite
        run: npm run build

      - name: 3. run buildstep for htmls and index
        run: node buildstep.js

      - name: 4. sync dist-spa and dist-content to docs (incremental)
        run: |
          set -e
          if [ ! -d docs ]; then
            mkdir -p docs
            rsync -a --delete dist/ docs/
            exit 0
          fi

          # sync SPA/core except posts
          rsync -a --delete --exclude 'posts' dist/ docs/

          # copy only changed/created posts
          if [ -f .changed-posts.txt ]; then
            while IFS= read -r slug || [ -n "$slug" ]; do
              mkdir -p "docs/posts/$slug"
              rsync -a "dist/posts/$slug/" "docs/posts/$slug/"
            done < .changed-posts.txt
          fi

          # remove deleted posts from docs
          if [ -f .removed-posts.txt ]; then
            while IFS= read -r slug || [ -n "$slug" ]; do
              rm -rf "docs/posts/$slug"
            done < .removed-posts.txt
          fi

      - name: check cache exists
        id: check_cache
        run: |
          if [ -f ./.build-cache.json ]; then
            echo "has_cache=true" >> $GITHUB_OUTPUT
          else
            echo "has_cache=false" >> $GITHUB_OUTPUT
          fi

      - name: persist build cache (artifact)
        if: steps.check_cache.outputs.has_cache == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: build-cache
          path: ./.build-cache.json

      - name: cleanup temp list files before commit
        run: |
          rm -f .changed-posts.txt .removed-posts.txt || true

      - name: commit & push generated files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/ .build-cache.json
          if git diff --cached --quiet; then
            echo "no changes to commit"
          else
            git commit -m "build: regenerar html + index.json + SPA"
            git push origin HEAD:main
          fi